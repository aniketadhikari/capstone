[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "Visualization plot.html",
    "href": "Visualization plot.html",
    "title": "Import",
    "section": "",
    "text": "import os\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "Visualization plot.html#row-representation",
    "href": "Visualization plot.html#row-representation",
    "title": "Import",
    "section": "Row representation",
    "text": "Row representation\nLooks like every row is a KPI review for a (“LOCATION_SKEY”, “DEPARTMENT_ID”)\n\ndf[(df['LOCATION_SKEY']==94864) & (df['FISCAL_PERIOD_DATE']=='2022-01-01')]\n\n\n\n\n\n\n\n\nMERCHANDISING_YEAR\nMERCHANDISING_PERIOD\nFISCAL_PERIOD_DATE\nLOCATION_SKEY\nOPENINVC\nOPENINVR\nOPENINVU\nCLOSEC\nCLOSER\nCLOSEU\n...\nXFERR\nXFERU\nMARKDOWN\nMARKUP\nPOSMARKD\nMD\nDEPARTMENT_ID\nSHRINKPA\nSHRINKSA\nSHRINKPROV\n\n\n\n\n125\n2022\n1\n2022-01-01\n94864\n54.99\n93.92\n8.0\n54.99\n159.92\n8.0\n...\n0.00\n0\n0.0\n66.0\n0.00\n-66.00\n640\n0.0\n0.00\n0.00\n\n\n4407\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n818\n0.0\n0.00\n0.00\n\n\n8864\n2022\n1\n2022-01-01\n94864\n587.79\n1170.42\n58.0\n496.73\n989.46\n49.0\n...\n182.91\n9\n0.0\n0.0\n55.60\n55.60\n586\n0.0\n0.00\n3.05\n\n\n26473\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n637\n0.0\n0.00\n0.00\n\n\n43799\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n811\n0.0\n0.00\n0.00\n\n\n48133\n2022\n1\n2022-01-01\n94864\n21.33\n34.01\n19.0\n-0.21\n-0.34\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n639\n0.0\n0.00\n0.34\n\n\n48135\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n680\n0.0\n0.00\n0.00\n\n\n52465\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n983\n0.0\n0.00\n0.00\n\n\n56706\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n368\n0.0\n0.00\n0.00\n\n\n56708\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n862\n0.0\n0.00\n0.00\n\n\n73877\n2022\n1\n2022-01-01\n94864\n4321.34\n7684.88\n1022.0\n5036.68\n8774.71\n1155.0\n...\n2154.52\n268\n0.0\n0.0\n11.00\n11.00\n846\n0.0\n0.00\n10.44\n\n\n78212\n2022\n1\n2022-01-01\n94864\n1723.96\n2978.99\n421.0\n2417.69\n4110.11\n548.0\n...\n1693.70\n210\n0.0\n27.6\n0.00\n-27.60\n861\n0.0\n0.00\n8.71\n\n\n78216\n2022\n1\n2022-01-01\n94864\n-0.33\n-3299.52\n-1713.0\n-0.22\n-2228.12\n-1266.0\n...\n0.00\n0\n0.0\n0.0\n-6638.32\n-6638.32\n5004\n0.0\n-14456.99\n0.00\n\n\n78217\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n554\n0.0\n0.00\n0.00\n\n\n78221\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n210\n0.0\n0.00\n0.00\n\n\n104046\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n995\n0.0\n0.00\n0.00\n\n\n112762\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n345\n0.0\n0.00\n0.00\n\n\n112763\n2022\n1\n2022-01-01\n94864\n0.00\n0.00\n0.0\n0.00\n0.00\n0.0\n...\n0.00\n0\n0.0\n0.0\n0.00\n0.00\n835\n0.0\n0.00\n0.00\n\n\n121382\n2022\n1\n2022-01-01\n94864\n934.51\n1455.97\n173.0\n669.63\n998.09\n133.0\n...\n-95.80\n20\n0.0\n0.0\n0.00\n0.00\n518\n0.0\n0.00\n3.58\n\n\n\n\n19 rows × 27 columns\n\n\n\n\ndf[(df['LOCATION_SKEY']==94864) & (df['FISCAL_PERIOD_DATE']=='2022-01-01')]['DEPARTMENT_ID'].value_counts()\n\n640     1\n846     1\n835     1\n345     1\n995     1\n210     1\n554     1\n5004    1\n861     1\n862     1\n818     1\n368     1\n983     1\n680     1\n639     1\n811     1\n637     1\n586     1\n518     1\nName: DEPARTMENT_ID, dtype: int64\n\n\n\nlen(df[(df['LOCATION_SKEY']==94864) & (df['FISCAL_PERIOD_DATE']=='2022-01-01')]['DEPARTMENT_ID'].value_counts())\n\n19"
  },
  {
    "objectID": "Visualization plot.html#sales-trend-over-time",
    "href": "Visualization plot.html#sales-trend-over-time",
    "title": "Import",
    "section": "Sales Trend Over Time",
    "text": "Sales Trend Over Time\nData: KPI\nFeatures: SALESC, SALESR, SALESU, MERCHANDISING_YEAR, FISCAL_PERIOD_DATE\n\ndf[['SALESC', 'SALESR', 'SALESU']].head(10)\n\n\n\n\n\n\n\n\nSALESC\nSALESR\nSALESU\n\n\n\n\n0\n6.40\n5.45\n5\n\n\n1\n0.00\n0.00\n0\n\n\n2\n7.68\n10.14\n6\n\n\n3\n15771.97\n19182.57\n13701\n\n\n4\n0.00\n0.00\n0\n\n\n5\n129.04\n232.48\n32\n\n\n6\n0.00\n0.00\n0\n\n\n7\n0.00\n0.00\n0\n\n\n8\n30.15\n68.91\n12\n\n\n9\n0.00\n0.00\n0\n\n\n\n\n\n\n\n\nfeature = 'SALESC'\n\n\nfeature = 'SALESR'\n\n\nfeature = 'SALESU'\n\n\ncat = 'FISCAL_PERIOD_DATE'\n\n25 periods average all rows in particular location\n\n# Plot the line chart\nplt.plot(df.groupby(cat)[feature].mean())\n\n# Add title and labels\nplt.title(feature + ' to ' + cat + ' line chart')\nplt.xlabel(cat)\nplt.ylabel(feature)\nplt.xticks(rotation='vertical')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n# Plot the line chart\nplt.plot(df.groupby(cat)['SALESC'].mean(), label='SALESC')\nplt.plot(df.groupby(cat)['SALESR'].mean(), label='SALESR')\n\n# Add title and labels\nplt.title(feature + ' to ' + cat + ' line chart')\nplt.xlabel(cat)\nplt.ylabel(feature)\nplt.xticks(rotation='vertical')\nplt.legend()\n\n# Show the plot\nplt.show()"
  },
  {
    "objectID": "Visualization plot.html#sales-by-location",
    "href": "Visualization plot.html#sales-by-location",
    "title": "Import",
    "section": "Sales by Location",
    "text": "Sales by Location\nDataset: KPI\nFeatures: LOCATION_SKEY, DEPARTMENT_ID, SALESC, SALESR, SALESU\n\nfeature = 'SALESC'\n\n\nfeature = 'SALESR'\n\n\nfeature = 'SALESU'\n\n\ncat = 'LOCATION_SKEY'\n\n\ncat = 'DEPARTMENT_ID'\n\n\ngrouped_df = df.groupby(cat)[feature].sum()\n\nDrop 0 sales locations\n\ndata = grouped_df[grouped_df!=0]\nlen(data)\n\n154\n\n\n-&gt; Top 10 stores and bottom 10 locations and department\n\ndata\n\nDEPARTMENT_ID\n28      1298672\n54       708969\n71        48756\n79            5\n110        3970\n         ...   \n992      132093\n994       46827\n995        1565\n5003     253940\n5004    1306993\nName: SALESU, Length: 154, dtype: int64\n\n\n\nsorted_data = data.sort_values()\n\n\nplt.figure(figsize=(10, 6))\nsorted_data[-10:].plot(kind='bar', color='skyblue')\nplt.xlabel(cat)\nplt.ylabel(feature)\nplt.title(feature + ' by ' + cat + ' (top 10)')\nplt.xticks(rotation='vertical')\n\n(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]),\n [Text(0, 0, '836'),\n  Text(1, 0, '991'),\n  Text(2, 0, '28'),\n  Text(3, 0, '5004'),\n  Text(4, 0, '932'),\n  Text(5, 0, '966'),\n  Text(6, 0, '973'),\n  Text(7, 0, '597'),\n  Text(8, 0, '961'),\n  Text(9, 0, '962')])\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nsorted_data[:10].plot(kind='bar', color='skyblue')\nplt.xlabel(cat)\nplt.ylabel(feature)\nplt.title(feature + ' by ' + cat + ' (bottom 10)')\nplt.xticks(rotation='vertical')\n\n(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]),\n [Text(0, 0, '583'),\n  Text(1, 0, '711'),\n  Text(2, 0, '161'),\n  Text(3, 0, '79'),\n  Text(4, 0, '426'),\n  Text(5, 0, '796'),\n  Text(6, 0, '821'),\n  Text(7, 0, '717'),\n  Text(8, 0, '799'),\n  Text(9, 0, '725')])"
  },
  {
    "objectID": "Visualization plot.html#opening-vs.-closing-inventory",
    "href": "Visualization plot.html#opening-vs.-closing-inventory",
    "title": "Import",
    "section": "Opening vs. Closing Inventory",
    "text": "Opening vs. Closing Inventory\ndata: KPI\nfeatures: OPENINVC, OPENINVR, OPENINVU, CLOSEC, CLOSER, CLOSEU, FISCAL_PERIOD_DATE\n\nfeature_1, feature_2, cat = 'OPENINVC', 'CLOSEC', 'FISCAL_PERIOD_DATE'\n\n\nfeature_1, feature_2, cat = 'OPENINVR', 'CLOSER', 'FISCAL_PERIOD_DATE'\n\n\nfeature_1, feature_2, cat = 'OPENINVU', 'CLOSEU', 'FISCAL_PERIOD_DATE'\n\n\ndata = df[[feature_1, feature_2, cat]]\n\n\ngrouped_df = data.groupby(cat).sum()\n\n\nplt.figure(figsize=(10, 6))\ngrouped_df.plot(kind='bar', stacked=True)\nplt.xlabel(cat)\nplt.ylabel(\"Value\")\nplt.title('Stacked Bar Chart')\nrotation='vertical'  # Rotate x-axis labels if needed\nplt.legend(title='Values')  # Add legend with title\nplt.show()\n\n&lt;Figure size 1000x600 with 0 Axes&gt;"
  },
  {
    "objectID": "Visualization plot.html#inventory-receipts-and-returns",
    "href": "Visualization plot.html#inventory-receipts-and-returns",
    "title": "Import",
    "section": "Inventory Receipts and Returns",
    "text": "Inventory Receipts and Returns\ndata: KPI\nfeatures: OPENINVC, CLOSEC, SALESC, FISCAL_PERIOD_DATE\n\ndata = df[['OPENINVC', 'CLOSEC', 'SALESC', 'FISCAL_PERIOD_DATE']]\n\n\ndata\n\n\n\n\n\n\n\n\nOPENINVC\nCLOSEC\nSALESC\nFISCAL_PERIOD_DATE\n\n\n\n\n0\n1.18\n25.44\n6.40\n2022-01-01\n\n\n1\n0.00\n0.00\n0.00\n2022-01-01\n\n\n2\n0.00\n3.76\n7.68\n2022-01-01\n\n\n3\n21913.31\n14369.56\n15771.97\n2022-01-01\n\n\n4\n0.00\n0.00\n0.00\n2022-01-01\n\n\n...\n...\n...\n...\n...\n\n\n125524\n0.00\n0.00\n0.00\n2023-12-01\n\n\n125525\n0.00\n0.00\n0.00\n2023-12-01\n\n\n125526\n0.00\n0.00\n0.00\n2024-01-01\n\n\n125527\n0.00\n0.00\n0.00\n2024-01-01\n\n\n125528\n0.00\n0.00\n0.00\n2024-01-01\n\n\n\n\n125529 rows × 4 columns\n\n\n\n\ngrouped_df = data.groupby(cat).sum()\n\nDrop the last two periods due to zero values\n\ngrouped_df = grouped_df[:-2]\n\n\ngrouped_df['AVG_INV'] = (grouped_df['OPENINVC'] + grouped_df['CLOSEC'])/2\n\n\ngrouped_df['TURNOVER_RATE'] = grouped_df['SALESC'] / grouped_df['AVG_INV']\n\n\nplt.plot(grouped_df['TURNOVER_RATE'])\n\n# Add title and labels\nplt.title('Turnover rate')\nplt.xlabel('Turnover rate')\nplt.ylabel(\"period\")\nplt.xticks(rotation='vertical')\n\n# Show the plot\nplt.show()"
  },
  {
    "objectID": "Visualization plot.html#impact-of-pricing-adjustment-on-sales",
    "href": "Visualization plot.html#impact-of-pricing-adjustment-on-sales",
    "title": "Import",
    "section": "Impact of Pricing Adjustment on Sales",
    "text": "Impact of Pricing Adjustment on Sales\ndata: KPI\nFeatures: MARKDOWN, MARKUP, POSMARKD, MD, FISCAL_PERIOD_DATE, SALESC\n\ndata = df[['MARKDOWN', 'MARKUP', 'POSMARKD', 'MD', 'SALESC', 'FISCAL_PERIOD_DATE']]\n\n\ndata\n\n\n\n\n\n\n\n\nMARKDOWN\nMARKUP\nPOSMARKD\nMD\nSALESC\nFISCAL_PERIOD_DATE\n\n\n\n\n0\n0.0\n0.0\n0.00\n0.00\n6.40\n2022-01-01\n\n\n1\n0.0\n0.0\n0.00\n0.00\n0.00\n2022-01-01\n\n\n2\n0.0\n0.0\n0.00\n0.00\n7.68\n2022-01-01\n\n\n3\n0.0\n16.7\n310.37\n293.67\n15771.97\n2022-01-01\n\n\n4\n0.0\n0.0\n0.00\n0.00\n0.00\n2022-01-01\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n125524\n0.0\n0.0\n0.00\n0.00\n0.00\n2023-12-01\n\n\n125525\n0.0\n0.0\n0.00\n0.00\n0.00\n2023-12-01\n\n\n125526\n0.0\n0.0\n0.00\n0.00\n0.00\n2024-01-01\n\n\n125527\n0.0\n0.0\n0.00\n0.00\n0.00\n2024-01-01\n\n\n125528\n0.0\n0.0\n0.00\n0.00\n0.00\n2024-01-01\n\n\n\n\n125529 rows × 6 columns\n\n\n\n\ndata['COUNT_MARK'] = (data['MARKDOWN'] != 0) | (df['MARKUP'] != 0)\ndata['COUNT_MARK'] = data['COUNT_MARK'].astype(int)\n\n/var/folders/lb/vv79n0s57yzd8ks6lk4lnp9w0000gn/T/ipykernel_26147/1734660132.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  data['COUNT_MARK'] = (data['MARKDOWN'] != 0) | (df['MARKUP'] != 0)\n/var/folders/lb/vv79n0s57yzd8ks6lk4lnp9w0000gn/T/ipykernel_26147/1734660132.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  data['COUNT_MARK'] = data['COUNT_MARK'].astype(int)\n\n\n\ndata\n\n\n\n\n\n\n\n\nMARKDOWN\nMARKUP\nPOSMARKD\nMD\nSALESC\nFISCAL_PERIOD_DATE\nCOUNT_MARK\n\n\n\n\n0\n0.0\n0.0\n0.00\n0.00\n6.40\n2022-01-01\n0\n\n\n1\n0.0\n0.0\n0.00\n0.00\n0.00\n2022-01-01\n0\n\n\n2\n0.0\n0.0\n0.00\n0.00\n7.68\n2022-01-01\n0\n\n\n3\n0.0\n16.7\n310.37\n293.67\n15771.97\n2022-01-01\n1\n\n\n4\n0.0\n0.0\n0.00\n0.00\n0.00\n2022-01-01\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n125524\n0.0\n0.0\n0.00\n0.00\n0.00\n2023-12-01\n0\n\n\n125525\n0.0\n0.0\n0.00\n0.00\n0.00\n2023-12-01\n0\n\n\n125526\n0.0\n0.0\n0.00\n0.00\n0.00\n2024-01-01\n0\n\n\n125527\n0.0\n0.0\n0.00\n0.00\n0.00\n2024-01-01\n0\n\n\n125528\n0.0\n0.0\n0.00\n0.00\n0.00\n2024-01-01\n0\n\n\n\n\n125529 rows × 7 columns\n\n\n\n\ngrouped_df = data.groupby('FISCAL_PERIOD_DATE').sum()\n\n\ngrouped_df\n\n\n\n\n\n\n\n\nMARKDOWN\nMARKUP\nPOSMARKD\nMD\nSALESC\nCOUNT_MARK\n\n\nFISCAL_PERIOD_DATE\n\n\n\n\n\n\n\n\n\n\n2022-01-01\n270816.64\n188185.00\n342711.47\n425343.11\n6167692.30\n797\n\n\n2022-02-01\n228246.58\n211915.63\n366062.31\n382393.26\n8852171.36\n836\n\n\n2022-03-01\n186539.05\n141470.81\n460601.18\n505669.42\n7422253.35\n686\n\n\n2022-04-01\n203924.57\n287687.18\n493621.13\n409858.52\n6895631.65\n813\n\n\n2022-05-01\n180301.04\n188150.19\n735237.51\n727388.36\n8303888.01\n774\n\n\n2022-06-01\n334733.75\n191982.38\n409797.31\n552548.68\n7204093.67\n713\n\n\n2022-07-01\n404632.95\n150814.51\n491255.00\n745073.44\n6910725.08\n754\n\n\n2022-08-01\n474976.34\n139039.57\n718932.35\n1054869.12\n8882814.73\n734\n\n\n2022-09-01\n556995.57\n66678.09\n646339.12\n1136656.60\n8896409.87\n669\n\n\n2022-10-01\n373215.48\n108055.98\n1164213.60\n1429373.10\n8119589.21\n675\n\n\n2022-11-01\n372354.42\n93212.55\n1656458.45\n1935600.32\n10471510.28\n587\n\n\n2022-12-01\n359476.91\n135253.30\n375593.23\n599816.84\n5632579.94\n592\n\n\n2023-01-01\n481099.58\n194241.34\n472997.11\n759855.35\n7296639.42\n711\n\n\n2023-02-01\n399870.90\n227727.73\n630085.93\n802229.10\n9724129.13\n778\n\n\n2023-03-01\n276057.35\n57307.96\n607011.03\n825760.42\n8400685.92\n605\n\n\n2023-04-01\n222919.20\n34074.58\n542075.49\n730920.11\n6957326.15\n618\n\n\n2023-05-01\n261998.53\n473638.46\n919976.47\n708336.54\n9863320.75\n685\n\n\n2023-06-01\n313672.53\n87417.03\n559721.71\n785977.21\n8087189.80\n638\n\n\n2023-07-01\n341883.60\n82614.28\n653461.41\n912730.73\n7828669.64\n724\n\n\n2023-08-01\n390354.80\n105696.34\n692034.79\n976693.25\n9664694.62\n618\n\n\n2023-09-01\n468731.35\n48985.18\n555979.60\n975725.77\n7020276.29\n623\n\n\n2023-10-01\n255866.49\n47986.49\n1446716.44\n1654596.44\n9464401.60\n568\n\n\n2023-11-01\n279814.22\n46169.26\n1665428.97\n1899073.93\n11166118.53\n613\n\n\n2023-12-01\n2.02\n0.00\n0.00\n2.02\n0.00\n7\n\n\n2024-01-01\n1.32\n0.00\n0.00\n1.32\n0.00\n1\n\n\n\n\n\n\n\n\n# Create a figure and axis object\nfig, ax1 = plt.subplots()\n\n# Plot data for the first y-axis (left)\nax1.plot(grouped_df['SALESC'], color='tab:blue', label='SALESC')\nax1.set_xlabel('Period')\nax1.set_ylabel('Total Sales', color='tab:blue')\nplt.xticks(rotation='vertical')\nplt.legend()\n\n# Create a second y-axis (right) and plot data\nax2 = ax1.twinx()\nax2.plot(grouped_df['COUNT_MARK'], color='tab:red', label='Number of Price Change')\nax2.set_ylabel('Number of Price Change', color='tab:red')\n\n# Add title\nplt.title('Impact of Pricing Adjustments on Sales')\nplt.legend()\nplt.xticks(rotation='vertical')\n\n# Show plot\nplt.show()"
  },
  {
    "objectID": "Capstone_shrinkage_filtering_visual.html",
    "href": "Capstone_shrinkage_filtering_visual.html",
    "title": "code-visualizations",
    "section": "",
    "text": "import ipywidgets as widgets\nfrom IPython.display import display\nimport pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\n\ndata = pd.read_csv(\"INV_ADJ_ANAL.csv\")\n\n\nDDD = []\n\ndef create_dropdown(opts, caption='Col:'):\n    dropdown = widgets.Dropdown(\n        options=opts,\n        value='-',\n        description=caption,\n        disabled=False,\n    )\n    dropdown.observe(on_dropdown_change, names='value')\n    dropdown.ind = None\n    return dropdown\n\ndef on_dropdown_change(change):\n    for i, dd in enumerate(DDD):\n        dd.ind = i\n    if change['owner'].ind % 2:\n        #VAL SELECTORS\n        if change['new'] != '-':\n            if change['owner'].ind == len(DDD)-1:\n                opts = ['-'] + [q for q in data.columns]\n                new_dropdown = create_dropdown(opts)\n                display(new_dropdown)\n                DDD.append(new_dropdown)\n        else:\n            pass\n    else:\n        #COL SELECTORS\n        if change['new'] != '-':\n            opts = ['-'] + data[change.new].unique().tolist()\n            new_dropdown = create_dropdown(opts, 'Val:')\n            display(new_dropdown)\n            DDD.append(new_dropdown)\n        else:\n            DDD[change['owner'].ind + 1].close()\n            del DDD[change['owner'].ind + 1]\n            if change['owner'].ind != len(DDD)-1:\n                DDD[change['owner'].ind].close()\n                del DDD[change['owner'].ind]\n\ndef create_visual(feature, data):\n    sns.scatterplot(x = data[\"PERIOD\"], y = data[\"TY_QTY\"], hue = feature, data = data)\n    title = f\"shrinkage vs year period\"\n    plt.title(title)\n    plt.xlabel(\"year period\")\n    plt.ylabel(f\"Shrikage quantity\")\n    plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\n    plt.xticks(rotation='vertical')\n    plt.show()\n               \n\n# Create the initial dropdown and display it\ninitial_dropdown = create_dropdown(opts = ['-'] + [q for q in data.columns])\nDDD.append(initial_dropdown)\n\ndisplay(initial_dropdown)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndcopy = data\nlast = None\ncond = True\nfor i, v in enumerate(DDD):\n    if i % 2:\n        cond &= (dcopy[last] == v.value)\n    else:\n        last = v.value\ndcopy[cond]\n\n\n\n\n\n\n\n\nCOMMAND_CD\nSITE_ID\nADJUSTMENT_CATEGORY\nDESCRIPTION\nDIVISION\nLOB_DESC\nDEPT_DESC\nCLASS\nSUB_CLASS\nMERCHANDISING_YEAR\nMERCHANDISING_PERIOD\nPERIOD\nTY_QTY\nTY_VALUE\nLY_QTY2\nLY_VALUE2\nLM_QTY3\nLM_VALUE3\n\n\n\n\n173720\nPNM\n14100\nShrink\n300-ON HAND CORRECTION\nConsumables\nPersonal Care\nPERSNL CARE ELECTRIC\n1300 - ORAL HYGIENE\n1301 - TOOTHBRUSHES\n2023\n1\n2023-01\n-1\n(47.99)\n-\n-\n-\n-\n\n\n173727\nPNM\n14100\nShrink\n300-ON HAND CORRECTION\nConsumables\nHardware\nGENERAL HARDWARE\n1200 - LIGHT BULBS\n1201 - INCANDESCENT\n2023\n1\n2023-01\n-2\n(5.98)\n-\n-\n-\n-\n\n\n173927\nPNM\n14100\nShrink\n300-ON HAND CORRECTION\nConsumables\nFood\nDRY GROCERY\n1500 - NUTS & SEEDS\n1501 - NUTS\n2023\n1\n2023-01\n-1\n(0.89)\n-\n-\n-\n-\n\n\n174602\nPNM\n14100\nShrink\n300-ON HAND CORRECTION\nConsumables\nNon Alcoholic Bev\nNON-ALCOHOLIC BEVERAGES\n1100 - CSD\n1104 - 20OZ FLAVORED REG\n2023\n1\n2023-01\n-20\n(39.80)\n-\n-\n-\n-\n\n\n174693\nPNM\n14100\nShrink\n300-ON HAND CORRECTION\nConsumables\nWine\nWINE\n2100 - POPULAR\n2110 - MOSCATO\n2023\n1\n2023-01\n0\n-\n-\n-\n(1.00)\n(9.99)\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n450659\nPNM\n14100\nShrink\n300-ON HAND CORRECTION\nConsumables\nCosmetics\nBATH AND BODY\n5900 - COCOA BROWN\n5901 - BODY\n2023\n12\n2023-12\n0\n-\n(1.00)\n(4.94)\n-\n-\n\n\n450859\nPNM\n14100\nShrink\n301-CYCLE COUNT\nConsumables\nStationery\nGREETING CARDS\n1000 - GREETING CARDS\n1003 - WEDDING/ANNIVERSARY\n2023\n12\n2023-12\n0\n-\n-\n-\n(2.00)\n(5.78)\n\n\n450936\nPNM\n14100\nShrink\n300-ON HAND CORRECTION\nConsumables\nCosmetics\nPRESTIGE FRAGRANCE\n1000 - HFC PRESTIGE\n1007 - FRAGRANCE MEN\n2023\n12\n2023-12\n0\n-\n(1.00)\n(53.00)\n-\n-\n\n\n451894\nPNM\n14100\nShrink\n300-ON HAND CORRECTION\nConsumables\nFood\nGOURMET FOOD/CANDY\n1100 - HOLIDAY GOURMET\n1101 - HOLIDAY GOURMET\n2023\n12\n2023-12\n0\n-\n-\n-\n(11.00)\n(26.89)\n\n\n452211\nPNM\n14100\nShrink\n301-CYCLE COUNT\nConsumables\nSports Nutrition\nSPORT NUTRITION\n1200 - BARS\n1202 - PROTEIN\n2023\n12\n2023-12\n-2\n(0.88)\n-\n-\n-\n-\n\n\n\n\n1753 rows × 18 columns\n\n\n\n\nfiltered_data = dcopy[cond]\ncreate_visual(filtered_data[\"LOB_DESC\"], filtered_data)"
  },
  {
    "objectID": "INV_eda.html",
    "href": "INV_eda.html",
    "title": "Read data",
    "section": "",
    "text": "Import\n\nimport os\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n\nRead data\n\nfile_path = \"DoD_data/INV_ADJ_ANAL.xlsx\"\ndf = pd.read_excel(file_path)\n\n\ndf\n\n\n\n\n\n\n\n\nCOMMAND_CD\nSITE_ID\nADJUSTMENT_CATEGORY\nDESCRIPTION\nDIVISION\nLOB_DESC\nDEPT_DESC\nCLASS\nSUB_CLASS\nMERCHANDISING_YEAR\nMERCHANDISING_PERIOD\nPERIOD\nTY_QTY\nTY_VALUE\nLY_QTY2\nLY_VALUE2\nLM_QTY3\nLM_VALUE3\n\n\n\n\n0\nPNM\n14100\nSurveys\n102-DAMAGED OR MISSING PARTS\nConsumables\nNon Alcoholic Bev\nNON-ALCOHOLIC BEVERAGES\n1400 - ENHANCED WATER\n1407 - CLEAR GALLONS\n2023\n10\n2023-10\n0\n0.00\n1\n3.99\n0\n0.00\n\n\n1\nPNM\n14100\nSurveys\n102-DAMAGED OR MISSING PARTS\nConsumables\nNon Alcoholic Bev\nNON-ALCOHOLIC BEVERAGES\n1400 - ENHANCED WATER\n1407 - CLEAR GALLONS\n2024\n5\n2024-05\n0\n0.00\n1\n3.99\n0\n0.00\n\n\n2\nCPM\n4100\nShrink\n300-ON HAND CORRECTION\nConsumables\nHealth Beauty Aids\nHEALTH & BEAUTY AIDS\n2100 - FOOT CARE\n2102 - ANTIFUNGAL\n2022\n1\n2022-01\n-2\n-5.98\n0\n0.00\n0\n0.00\n\n\n3\nSDM\n9300\nSurveys\n102-DAMAGED OR MISSING PARTS\nConsumables\nNon Alcoholic Bev\nNON-ALCOHOLIC BEVERAGES\n1400 - ENHANCED WATER\n1407 - CLEAR GALLONS\n2023\n9\n2023-09\n0\n0.00\n1\n3.99\n0\n0.00\n\n\n4\nCLM\n5304\nSurveys\n102-DAMAGED OR MISSING PARTS\nConsumables\nNon Alcoholic Bev\nNON-ALCOHOLIC BEVERAGES\n1400 - ENHANCED WATER\n1407 - CLEAR GALLONS\n2023\n12\n2023-12\n0\n0.00\n0\n0.00\n1\n6.99\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n578197\nSCM\n18101\nReconciliation\n303-PHYSICAL INV RECONCILIATION\nConsumables\nHealth Beauty Aids\nHEALTH & BEAUTY AIDS\n1000 - BABY CARE\n1005 - BABY CARE\n2024\n12\n2024-12\n0\n0.00\n-2\n570.22\n0\n0.00\n\n\n578198\nPNM\n10321\nShrink\n300-ON HAND CORRECTION\nConsumables\nStationery\nSTATIONERY SUPPLIES\n1700 - PAPER PRODUCTS\n1705 - INDEX CARDS\n2024\n12\n2024-12\n0\n0.00\n0\n0.20\n0\n0.00\n\n\n578199\nCLM\n5202\nSurveys\n101-EXPIRED\nConsumables\nHealth Beauty Aids\nHEALTH & BEAUTY AIDS\n3500 - VITAMINS / DIET / SUPPLEMENTS\n3505 - OTHERS\n2023\n8\n2023-08\n4\n7.68\n0\n0.00\n0\n0.00\n\n\n578200\nCLM\n5300\nSurveys\n101-EXPIRED\nConsumables\nHealth Beauty Aids\nHEALTH & BEAUTY AIDS\n3500 - VITAMINS / DIET / SUPPLEMENTS\n3505 - OTHERS\n2022\n2\n2022-02\n10\n7.40\n0\n0.00\n5\n24.95\n\n\n578201\nTWM\n13314\nReconciliation\n303-PHYSICAL INV RECONCILIATION\nConsumables\nHealth Beauty Aids\nHEALTH & BEAUTY AIDS\n3300 - SUN CARE\n3303 - AFTER SUN\n2024\n12\n2024-12\n0\n0.00\n-2\n-11.98\n0\n0.00\n\n\n\n\n578202 rows × 18 columns\n\n\n\n\n\nBasic statistics\n\ndf.shape\n\n(578202, 18)\n\n\n\ndf.columns\n\nIndex(['COMMAND_CD', 'SITE_ID', 'ADJUSTMENT_CATEGORY', 'DESCRIPTION',\n       'DIVISION', 'LOB_DESC', 'DEPT_DESC', 'CLASS', 'SUB_CLASS',\n       'MERCHANDISING_YEAR', 'MERCHANDISING_PERIOD', 'PERIOD', 'TY_QTY',\n       'TY_VALUE', 'LY_QTY2', 'LY_VALUE2', 'LM_QTY3', 'LM_VALUE3'],\n      dtype='object')\n\n\n\ndf.dtypes\n\nCOMMAND_CD               object\nSITE_ID                   int64\nADJUSTMENT_CATEGORY      object\nDESCRIPTION              object\nDIVISION                 object\nLOB_DESC                 object\nDEPT_DESC                object\nCLASS                    object\nSUB_CLASS                object\nMERCHANDISING_YEAR        int64\nMERCHANDISING_PERIOD      int64\nPERIOD                   object\nTY_QTY                    int64\nTY_VALUE                float64\nLY_QTY2                   int64\nLY_VALUE2               float64\nLM_QTY3                   int64\nLM_VALUE3               float64\ndtype: object\n\n\n\n# summary statistics for non categorical data\ndf.describe()\n\n\n\n\n\n\n\n\nSITE_ID\nMERCHANDISING_YEAR\nMERCHANDISING_PERIOD\nTY_QTY\nTY_VALUE\nLY_QTY2\nLY_VALUE2\nLM_QTY3\nLM_VALUE3\n\n\n\n\ncount\n578202.000000\n578202.000000\n578202.000000\n5.782020e+05\n5.782020e+05\n5.782020e+05\n5.782020e+05\n5.782020e+05\n5.782020e+05\n\n\nmean\n10302.249306\n2022.907539\n6.806305\n-4.269150e+00\n5.611069e+00\n-4.273852e+00\n5.594672e+00\n-4.269150e+00\n5.611069e+00\n\n\nstd\n7393.540936\n0.717590\n3.569258\n3.945888e+03\n7.290181e+03\n3.945888e+03\n7.290180e+03\n3.945888e+03\n7.290181e+03\n\n\nmin\n1100.000000\n2022.000000\n1.000000\n-3.000000e+06\n-3.870000e+06\n-3.000000e+06\n-3.870000e+06\n-3.000000e+06\n-3.870000e+06\n\n\n25%\n5202.000000\n2022.000000\n4.000000\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n\n\n50%\n10332.000000\n2023.000000\n7.000000\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n\n\n75%\n13314.000000\n2023.000000\n10.000000\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n0.000000e+00\n\n\nmax\n70001.000000\n2024.000000\n12.000000\n3.041400e+04\n3.938227e+06\n3.041400e+04\n3.938227e+06\n3.041400e+04\n3.938227e+06\n\n\n\n\n\n\n\n\n\nCorrelation heatmap\n\n# Calculate the correlation matrix\ncorr_matrix = df.corr()\n\n# Plot the heatmap\nsns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n\n# Add title\nplt.title('Correlation Heatmap')\n\n# Display the plot\nplt.show()\n\n\n\n\n\n\nIndividual features and Visualization\n\nCOMMAND_CD (Command code)\n\ndf['COMMAND_CD'].value_counts()\n\nPNM     116688\nCLM      99860\nTWM      80427\nMRM      44469\nQUM      43625\nKBM      39087\nSCM      35348\nIWM      31725\nCPM      26959\nHHM      20653\nSDM      17149\nELM      11965\nALM       4718\nRDCW      3498\nRDCE      2031\nName: COMMAND_CD, dtype: int64\n\n\n\n# number of categories\nlen(df['COMMAND_CD'].value_counts())\n\n15\n\n\n\n# Plotting the bar chart\nseries = df['COMMAND_CD'].value_counts()\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nSITE_ID (Site ID)\n\ndf['SITE_ID'].value_counts()\n\n13100    43610\n11100    32149\n10101    24042\n5100     22986\n15100    20704\n         ...  \n5311        24\n2802        24\n10364       12\n16107        3\n5020         3\nName: SITE_ID, Length: 126, dtype: int64\n\n\n\ndf['SITE_ID'].unique()\n\narray([14100,  4100,  9300,  5304,  5102, 13100,  2301,  2500, 13307,\n       13306, 15301, 15200,  4200, 18301,  4300,  5100,  5211, 18100,\n       14301, 11301, 10118, 14400, 15305,  5207,  5202,  5305,  5309,\n        5301,  2305,  2205, 15100,  3100, 10322, 10352,  5201, 10333,\n       10101,  5310,  5315,  5209, 14302,  5314, 18703, 16101, 15306,\n        1100, 11100, 10321, 10332, 11300, 12100, 18101,  8100,  2100,\n       10324, 10251, 13314,  9700, 10362, 13305,  5001, 10320,  1500,\n        2202, 15400,  5316, 10314, 16300, 10353, 15303, 16001, 11200,\n       10326,  2309,  9100,  5303,  5302, 10113, 10341, 10343,  2801,\n        1200,  5311, 10500, 10323, 16020, 10451,  9301, 16301, 70001,\n       13380, 10344,  5500, 13379,  2304, 12300,  5306, 10413,  5300,\n        2800, 10303,  2211, 12301, 10325, 10304, 16002, 10397, 10399,\n        5398,  5020, 10230, 60001, 10252, 18303, 15001,  2802, 10003,\n       10700,  4399, 10364, 13399,  2302, 16107, 10398,  5206, 10001])\n\n\n\n# number of categories\nlen(df['SITE_ID'].value_counts())\n\n126\n\n\n\n# Pareto\nint(len(df['SITE_ID'].value_counts())*0.2)\n\n25\n\n\n\n# Plotting the bar chart\nseries = df['SITE_ID'].value_counts()[:25]\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nADJUSTMENT_CATEGORY\n\ndf['ADJUSTMENT_CATEGORY'].value_counts()\n\nSurveys           285303\nShrink            247662\nAll Other          33673\nReconciliation     11564\nName: ADJUSTMENT_CATEGORY, dtype: int64\n\n\n\n# Plotting the bar chart\nseries = df['ADJUSTMENT_CATEGORY'].value_counts()\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nDESCRIPTION\n\ndf['DESCRIPTION'].value_counts()\n\n300-ON HAND CORRECTION             182916\n102-DAMAGED OR MISSING PARTS       160009\n101-EXPIRED                        103170\n301-CYCLE COUNT                     45184\n555-RDC Transfer Discrepancy        24743\n103-RETURNED UNSELLABLE             16195\n302-KNOWN THEFT                     14226\n303-PHYSICAL INV RECONCILIATION     11564\n106-STORE USE                        8076\n104-HQ DIRECTED WRITEOFF             5929\n1-OPERATIONAL                        5336\n222-MILITARY CLOTHING DRMO            854\nName: DESCRIPTION, dtype: int64\n\n\n\n# Plotting the bar chart\nseries = df['DESCRIPTION'].value_counts()\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nDIVISION\n\ndf['DIVISION'].value_counts()\n\nConsumables      405493\nHardlines         84979\nSoftlines         63779\nComm Military     23622\nNON-RMS             201\nRetail              122\nServices              6\nName: DIVISION, dtype: int64\n\n\n\n# Plotting the bar chart\nseries = df['DIVISION'].value_counts()\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nLOB_DESC\n\ndf['LOB_DESC'].value_counts()\n\nFood                   153713\nHealth  Beauty Aids     65975\nNon Alcoholic Bev       52398\nCleaning                20848\nSporting Goods          19177\nCosmetics               17459\nSports Nutrition        14919\nTobacco                 14333\nStationery              13432\nSpirits                 11567\nAccessories/Jewelry     10597\nHousewares              10463\nShoes                   10193\nCommercial Uniform       9967\nBeer and Ale             9894\nYoung Mens               9530\nMilitary Logo            9357\nMens                     8556\nGifts & Home Decor       8008\nHardware                 7314\nToys                     7269\nWomens                   7249\nChildrens                6956\nMass Cosmetics           6650\nComputers                6443\nDomestics                5974\nVideo/Audio              5725\nOutdoor                  5198\nCommunication            5106\nPets                     4926\nSmall Electrics          4778\nIntimate Apparel         4753\nAuto Accessories         4582\nWine                     4549\nDSCP                     4292\nVideo Games              3238\nJuniors                  2826\nPersonal Care            2820\nTrim                     2375\nLuggage                  1844\nWomens RTW               1275\nFloor Care                809\nFurniture                 378\nNON-RMS                   201\nRetail                    122\nRetail Food Bar            88\nAppliances                 35\nRetail Beverage Bar        26\nServices                    6\nNavy Misc Services          6\nPrerecorded AV              3\nName: LOB_DESC, dtype: int64\n\n\n\nlen(df['LOB_DESC'].unique())\n\n51\n\n\n\n# Pareto\nint(len(df['LOB_DESC'].value_counts())*0.2)\n\n10\n\n\n\n# Plotting the bar chart\nseries = df['LOB_DESC'].value_counts()[: 10]\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nDEPT_DESC\n\ndf['DEPT_DESC'].value_counts()\n\nDRY GROCERY                        88921\nHEALTH & BEAUTY AIDS               65975\nNON-ALCOHOLIC BEVERAGES            43693\nCANDY                              22328\nCleaning Supplies                  20848\n                                   ...  \nALEXANDRE OF LONDON                    3\nSOMA                                   3\nLAUNDRY / DRY CLEANING / TAILOR        3\nFOOD AND BEVERAGE                      3\nPRE-RECORDED A/V                       3\nName: DEPT_DESC, Length: 164, dtype: int64\n\n\n\nlen(df['DEPT_DESC'].unique())\n\n165\n\n\n\n# Pareto\nint(len(df['DEPT_DESC'].value_counts())*0.2)\n\n32\n\n\n\n# Plotting the bar chart\nseries = df['DEPT_DESC'].value_counts()[: 32]\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nCLASS\n\ndf['CLASS'].value_counts()\n\n1000 - CHILLED GROCERY               20112\n1000 - FROZEN GROCERY                17086\n1000 - ENERGY                        13422\n1500 - NUTS & SEEDS                  11273\n2100 - WAREHOUSE SALTY SNACKS        10076\n                                     ...  \n1800 - SEPARATE TRIANGLE TOP             3\n1100 - SURFBOARDS AND ACCESSORIES        3\n1700 - FRUIT VARIETAL                    3\n4900 - BUXOM                             3\n2100 - MISCELLANEOUS                     3\nName: CLASS, Length: 1278, dtype: int64\n\n\n\nlen(df['CLASS'].unique())\n\n1278\n\n\n\n# Plotting the bar chart\nseries = df['CLASS'].value_counts()[: 20]\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nSUB_CLASS\n\ndf['SUB_CLASS'].value_counts()\n\n2105 - OTHER WH SALTY SNACKS    5289\n1201 - PEGGED CANDY             5079\n1005 - FROZEN MEALS             4651\n1010 - DAIRY                    4413\n2201 - BAKERY                   4365\n                                ... \n1728 - SAMBUCA                     3\n1425 - SANGRIA                     2\n1518 - SAUVIGNON BLANC             2\n1007 - CHESTS/DRAWERS              2\n7108 - COLLATERAL                  2\nName: SUB_CLASS, Length: 4877, dtype: int64\n\n\n\nlen(df['SUB_CLASS'].unique())\n\n4877\n\n\n\n# Plotting the bar chart\nseries = df['SUB_CLASS'].value_counts()[: 30]\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nMERCHANDISING_YEAR\n\ndf['MERCHANDISING_YEAR'].value_counts()\n\n2023    275523\n2022    178070\n2024    124609\nName: MERCHANDISING_YEAR, dtype: int64\n\n\n\n2023 consists of 47.65% of the data\n\n\n# Plotting the bar chart\nseries = df['MERCHANDISING_YEAR'].value_counts()\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nMERCHANDISING_PERIOD\n\ndf['MERCHANDISING_PERIOD'].value_counts()\n\n12    63677\n11    61483\n8     50074\n1     48687\n9     46722\n2     46575\n6     45797\n5     45237\n10    43759\n7     43572\n3     41982\n4     40637\nName: MERCHANDISING_PERIOD, dtype: int64\n\n\n\n# Plotting the bar chart\nseries = df['MERCHANDISING_PERIOD'].value_counts()\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\n\nPERIOD\n\ndf['PERIOD'].value_counts()\n\n2023-12    30461\n2023-11    28970\n2023-08    23716\n2023-09    22478\n2023-06    21973\n2023-05    21888\n2023-01    21843\n2023-02    21813\n2023-07    21500\n2022-12    20744\n2023-03    20672\n2023-10    20453\n2023-04    19756\n2024-01    19191\n2022-11    18910\n2022-09    16526\n2022-08    16102\n2022-10    15040\n2022-06    14709\n2022-05    14237\n2022-02    14189\n2022-07    14119\n2024-11    13603\n2022-03    13437\n2024-12    12472\n2022-04    12404\n2024-02    10573\n2024-08    10256\n2024-06     9115\n2024-05     9112\n2024-04     8477\n2024-10     8266\n2024-07     7953\n2024-03     7873\n2024-09     7718\n2022-01     7653\nName: PERIOD, dtype: int64\n\n\n\ndf['PERIOD'].unique()\n\narray(['2023-10', '2024-05', '2022-01', '2023-09', '2023-12', '2022-09',\n       '2023-06', '2024-10', '2022-08', '2022-11', '2023-04', '2023-07',\n       '2022-06', '2022-04', '2024-03', '2022-02', '2023-02', '2024-04',\n       '2024-01', '2022-12', '2023-03', '2023-01', '2023-05', '2024-07',\n       '2022-05', '2022-03', '2022-07', '2023-08', '2024-08', '2023-11',\n       '2024-09', '2022-10', '2024-12', '2024-11', '2024-02', '2024-06'],\n      dtype=object)\n\n\n\n# Plotting the bar chart\nseries = df['PERIOD'].value_counts()\nseries.plot(kind='bar')\n\n# Adding labels and title\nplt.xlabel('Categories')\nplt.ylabel('Counts')\nplt.title('Bar Chart')\n\n# Show the plot\nplt.show()\n\n\n\n\n\nLast two periods of 2023 have appearantly higher adjustments\nCan further drill into this by breaking down the 2023 data\n\n\n\n\nTO BE CONTINUED\n\ndf['TY_QTY'].describe()\n\ncount    5.782020e+05\nmean    -4.269150e+00\nstd      3.945888e+03\nmin     -3.000000e+06\n25%      0.000000e+00\n50%      0.000000e+00\n75%      0.000000e+00\nmax      3.041400e+04\nName: TY_QTY, dtype: float64\n\n\n\ndf['TY_QTY'].hist()\n\n&lt;AxesSubplot:&gt;\n\n\n\n\n\n\n# Draw the box plot\nax = df['TY_QTY'].plot(kind='box')\n\n# Adjust the scale of the y-axis\nax.set_ylim(0, 100)  # Set the limits of the y-axis\n\n# Display the plot\nplt.show()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "code-visualizations",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]